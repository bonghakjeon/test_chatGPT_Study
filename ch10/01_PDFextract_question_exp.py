# PDF 문서 파일을 넣으면 해당 내용을 토대로 
# ChatGPT가 Hallucination(환각) 증상 일으키지 않고 
# 답변해주는 프로그램 제작하기

# 사용자가 ChatGPT에게 질문해보면 
# ChatGPT가 사용자의 질문에 대한 답변을 생성하는게 아니라 
# ChatGPT는 내부적으로 PDF 내용 기반으로 질문에 대한 답변을 찾아서 
# 사용자에게 답변해준다.

# 해당 프로그램에서 
# PDF 내용 기반 질문에 ChatGPT가 답변을 할 때, 
# 보통은 PDF 파일에서 추출된 글의 길이가 
# Max Token 이상일 경우가 존재한다.
# 이 때 만약 질문 내용에 대한 답변이 
# 해당 PDF 파일 내에서 어디에 위치하고 있는지 알 수 있다면
# 해당 부분만 따로 발췌해서 ChatGPT한테 다음과 같이 내 질문은 이것이고
# 그 질문에 대한 내용은 어느 위치에 있으니 이 부분에 위치한 내용만 읽고 대답해줘
# 라고 사용자가 물어볼 수만 있다면 더이상 글의 길이가 
# Max Token 이상일 경우를 걱정할 필요가 없다.
# 뿐만 아니라 PDF 파일에 존재하는 내용을 토대로 답변을 해주기 때문에
# 거짓 정보를 생성하는 Hallucination(환각) 증상 또한 없다.
# 여기서 가장 중요한 점은 내 질문에 대한 답변이 
# 도대체 어디에 있는지 찾아내는 과정이다.

# 프로그램 구조 
# *** 랭체인(LangChain) 프레임워크 사용 *** 
# 1. 사용자가 PDF 파일 입력 
# 2. 해당 PDF 파일 안에서 텍스트를 추출 
# 3. 2번에서 추출한 텍스트를 chunk 단위(사용하는 ChatGPT 언어 모델의 Max Token 보다 작은 크기인 한 묶음)로 분할 
# 4. 인간의 자연어를 컴퓨터가 알아들을 수 있는 언어인 벡터로 번역해주는 텍스트 임베딩 작업 실시 
# 5. 사용자의 질문 또한 컴퓨터의 언어인 벡터로 번역하는 텍스트 임베딩 작업 실시
# 6. 사용자의 질문과 유사한 chunk를 찾는 시맨틱서치(Semantic Search) 실행
# 7. 시맨틱서치(Semantic Search) 과정을 거치면 사용자의 질문과 유사한 내용이 포함되어 있는
#    몇개의 chunk 내용을 추출하게 된다. 
# 8. 마지막으로 ChatGPT에게 사용자의 질문은 이거고 이게 포함된 내용은
#    시맨틱서치(Semantic Search) 과정을 거쳐서 추출한 
#    몇개의 chunk 내용 안에 있으니 이 chunk 내용들을 읽고 사용자의 질문에 답해줘 라고 전달함.
# 9. ChatGPT가 마치 PDF 파일 내용을 다 읽고 사용자의 질문에 답변을 하는 것처럼
#    답변을 생성해서 화면으로 답변 출력 (데이터 시각화)